name: Deploy to Azure Container App

on:
  push:
    branches:
      - main
    paths:
      - 'src/PasswordPurgatory/PasswordPurgatory.Web/**/*' 
      - '.github/workflows/publish-azure-webapp.yml'

env:
  CONTAINER_APP_CONTAINER_NAME: passwordpurgatoryweb
  CONTAINER_APP_NAME: passwordpurgatoryweb-app-2024091
  CONTAINER_APP_RESOURCE_GROUP_NAME: password-purgatory
  CONTAINER_REGISTRY_LOGIN_SERVER: mvp10k.azurecr.io
  DOTNET_CORE_VERSION: 8.0.x
  PROJECT_NAME_FOR_DOCKER: passwordpurgatory.web

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout to the branch
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        include-prerelease: True
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

    - name: Log in to container registry
      uses: azure/docker-login@v2
      with:
        login-server: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.mvp10k_USERNAME_00EC }}
        password: ${{ secrets.mvp10k_PASSWORD_00EC }}

    - name: Build and push container image to registry
      run: dotnet publish -c Release -r linux-x64 -p:PublishProfile=DefaultContainer -p:ContainerImageTag=${{ github.sha }} --no-self-contained -p:ContainerRegistry=${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }} -bl

    - name: Upload binlog for investigation
      uses: actions/upload-artifact@v4
      with:
        if-no-files-found: error
        name: binlog
        path: msbuild.binlog

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Az Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.passwordpurgatoryweb_app_2024091_SPN }}

    - name: Az Container App Deploy
      uses: azure/CLI@v2
      with:
        inlineScript: >
          az config set extension.use_dynamic_install=yes_without_prompt

          az containerapp registry set --name ${{ env.CONTAINER_APP_NAME }} --resource-group ${{ env.CONTAINER_APP_RESOURCE_GROUP_NAME }} --server ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }} --username ${{ secrets.mvp10k_USERNAME_00EC }} --password ${{ secrets.mvp10k_PASSWORD_00EC }}

          az containerapp update --name ${{ env.CONTAINER_APP_NAME }} --container-name ${{ env.CONTAINER_APP_CONTAINER_NAME }} --resource-group ${{ env.CONTAINER_APP_RESOURCE_GROUP_NAME }} --image ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.PROJECT_NAME_FOR_DOCKER }}:${{ github.sha }}

    - name: Az Logout
      run: az logout
